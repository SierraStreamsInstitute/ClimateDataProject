# # Add columns for year and stat type based of variable name
VAR.long <- VAR.long %>%
mutate(
Year = gsub("[^[:digit:].]","",VAR.long$variable),
Stat = gsub(".*_(.*)\\_.*", "\\1", VAR.long$variable)
)
if("raw.forest.area.2016" %in% VAR.long$variable){
VAR.long$Year <- substrRight(VAR.long$Year,4)
VAR.long <-  mutate(VAR.long,
Stat = gsub("(?:[^.]+\\.){1}([^.]+).*", "\\1", VAR.long$variable)
)} else {
VAR.long
}
VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
if("mean" %in% VAR.long$Stat){
for (i in 1:length(VAR.long$Year)){
if(VAR.long$Year[i] %in% c(1,2,3,4,5,6,7,8,9)){
VAR.long$Year[i] <- paste0("200",VAR.long$Year[i])
# print("DOODLES")
}else{
VAR.long$Year[i] <- paste0('20',VAR.long$Year[i])
}
}
} else {
VAR.long
}
VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
}
NLCD <- uniForm(NLCD.raw,"area")
View(NLCD)
NDVI <- uniForm(NDVI.raw,"^NDVI")
NBR <- uniForm(NBR.raw,"^NBR")
View(NDVI)
View(NBR)
uniForm <- function(x,y){
# Rename gridcode to Site
colnames(x)[which(names(x) == "gridcode")] <- "Site"
# First, make a vector that finds all of the column names starting with y*
VAR.query <- colnames(x)[c(grepl(y, colnames(x)))]
# Then extract a dataframe of only variable values and "Gridcode"
VAR.data <- x[c("Site",VAR.query)]
# "Reshape" into longform
VAR.long <- melt(VAR.data, id.vars = "Site")
# # Add columns for year and stat type based of variable name
VAR.long <- VAR.long %>%
mutate(
Year = gsub("[^[:digit:].]","",VAR.long$variable),
Stat = gsub(".*_(.*)\\_.*", "\\1", VAR.long$variable)
)
if("raw.forest.area.2016" %in% VAR.long$variable){
VAR.long$Year <- substrRight(VAR.long$Year,4)
VAR.long <-  mutate(VAR.long,
Stat = gsub("(?:[^.]+\\.){1}([^.]+).*", "\\1", VAR.long$variable)
)} else {
VAR.long
}
if("mean" %in% VAR.long$Stat){
for (i in 1:length(VAR.long$Year)){
if(VAR.long$Year[i] %in% c(1,2,3,4,5,6,7,8,9)){
VAR.long$Year[i] <- paste0("200",VAR.long$Year[i])
# print("DOODLES")
}else{
VAR.long$Year[i] <- paste0('20',VAR.long$Year[i])
}
}
} else {
VAR.long
}
VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
}
NLCD <- uniForm(NLCD.raw,"area")
View(NLCD)
NDVI <- uniForm(NDVI.raw,"^NDVI")
View(NDVI)
uniForm <- function(x,y){
# Rename gridcode to Site
colnames(x)[which(names(x) == "gridcode")] <- "Site"
# First, make a vector that finds all of the column names starting with y*
VAR.query <- colnames(x)[c(grepl(y, colnames(x)))]
# Then extract a dataframe of only variable values and "Gridcode"
VAR.data <- x[c("Site",VAR.query)]
# "Reshape" into longform
VAR.long <- melt(VAR.data, id.vars = "Site")
# # Add columns for year and stat type based of variable name
VAR.long <- VAR.long %>%
mutate(
Year = gsub("[^[:digit:].]","",VAR.long$variable),
Stat = gsub(".*_(.*)\\_.*", "\\1", VAR.long$variable)
)
if("raw.forest.area.2016" %in% VAR.long$variable){
VAR.long$Year <- substrRight(VAR.long$Year,4)
VAR.long <-  mutate(VAR.long,
Stat = gsub("(?:[^.]+\\.){1}([^.]+).*", "\\1", VAR.long$variable)
)} else {
VAR.long
}
#
# if("mean" %in% VAR.long$Stat){
#   for (i in 1:length(VAR.long$Year)){
#     if(VAR.long$Year[i] %in% c(1,2,3,4,5,6,7,8,9)){
#       VAR.long$Year[i] <- paste0("200",VAR.long$Year[i])
#       # print("DOODLES")
#     }else{
#       VAR.long$Year[i] <- paste0('20',VAR.long$Year[i])
#     }
#   }
#
# } else {
#   VAR.long
# }
VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
}
NLCD <- uniForm(NLCD.raw,"area")
View(NLCD)
NDVI <- uniForm(NDVI.raw,"^NDVI")
View(NDVI)
NBR <- uniForm(NBR.raw,"^NBR")
### Universal Formatter ###
#Helper:
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
uniForm <- function(x,y){
# Rename gridcode to Site
colnames(x)[which(names(x) == "gridcode")] <- "Site"
# First, make a vector that finds all of the column names starting with y*
VAR.query <- colnames(x)[c(grepl(y, colnames(x)))]
# Then extract a dataframe of only variable values and "Gridcode"
VAR.data <- x[c("Site",VAR.query)]
# "Reshape" into longform
VAR.long <- melt(VAR.data, id.vars = "Site")
# # Add columns for year and stat type based of variable name
VAR.long <- VAR.long %>%
mutate(
Year = gsub("[^[:digit:].]","",VAR.long$variable),
Stat = gsub(".*_(.*)\\_.*", "\\1", VAR.long$variable)
)
if("raw.forest.area.2016" %in% VAR.long$variable){
VAR.long$Year <- substrRight(VAR.long$Year,4)
VAR.long <-  mutate(VAR.long,
Stat = gsub("(?:[^.]+\\.){1}([^.]+).*", "\\1", VAR.long$variable)
)} else {
VAR.long
}
VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
# if("mean" %in% VAR.long$Stat){
#   for (i in 1:length(VAR.long$Year)){
#     if(VAR.long$Year[i] %in% c(1,2,3,4,5,6,7,8,9)){
#       VAR.long$Year[i] <- paste0("200",VAR.long$Year[i])
#       # print("DOODLES")
#     }else{
#       VAR.long$Year[i] <- paste0('20',VAR.long$Year[i])
#     }
#   }
#
# } else {
#   VAR.long
# }
}
NLCD <- uniForm(NLCD.raw,"area")
NDVI <- uniForm(NDVI.raw,"^NDVI")
NBR <- uniForm(NBR.raw,"^NBR")
uniForm <- function(x,y){
# Rename gridcode to Site
colnames(x)[which(names(x) == "gridcode")] <- "Site"
# First, make a vector that finds all of the column names starting with y*
VAR.query <- colnames(x)[c(grepl(y, colnames(x)))]
# Then extract a dataframe of only variable values and "Gridcode"
VAR.data <- x[c("Site",VAR.query)]
# "Reshape" into longform
VAR.long <- melt(VAR.data, id.vars = "Site")
# # Add columns for year and stat type based of variable name
VAR.long <- VAR.long %>%
mutate(
Year = gsub("[^[:digit:].]","",VAR.long$variable),
Stat = gsub(".*_(.*)\\_.*", "\\1", VAR.long$variable)
)
if("raw.forest.area.2016" %in% VAR.long$variable){
VAR.long$Year <- substrRight(VAR.long$Year,4)
VAR.long <-  mutate(VAR.long,
Stat = gsub("(?:[^.]+\\.){1}([^.]+).*", "\\1", VAR.long$variable)
)} else {
VAR.long
}
VAR.fin <- VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
# if("mean" %in% VAR.long$Stat){
#   for (i in 1:length(VAR.long$Year)){
#     if(VAR.long$Year[i] %in% c(1,2,3,4,5,6,7,8,9)){
#       VAR.long$Year[i] <- paste0("200",VAR.long$Year[i])
#       # print("DOODLES")
#     }else{
#       VAR.long$Year[i] <- paste0('20',VAR.long$Year[i])
#     }
#   }
#
# } else {
#   VAR.long
# }
}
NLCD <- uniForm(NLCD.raw,"area")
NDVI <- uniForm(NDVI.raw,"^NDVI")
NBR <- uniForm(NBR.raw,"^NBR")
uniForm <- function(x,y){
# Rename gridcode to Site
colnames(x)[which(names(x) == "gridcode")] <- "Site"
# First, make a vector that finds all of the column names starting with y*
VAR.query <- colnames(x)[c(grepl(y, colnames(x)))]
# Then extract a dataframe of only variable values and "Gridcode"
VAR.data <- x[c("Site",VAR.query)]
# "Reshape" into longform
VAR.long <- melt(VAR.data, id.vars = "Site")
# # Add columns for year and stat type based of variable name
VAR.long <- VAR.long %>%
mutate(
Year = gsub("[^[:digit:].]","",VAR.long$variable),
Stat = gsub(".*_(.*)\\_.*", "\\1", VAR.long$variable)
)
if("raw.forest.area.2016" %in% VAR.long$variable){
VAR.long$Year <- substrRight(VAR.long$Year,4)
VAR.long <-  mutate(VAR.long,
Stat = gsub("(?:[^.]+\\.){1}([^.]+).*", "\\1", VAR.long$variable)
)} else {
VAR.long
}
VAR.fin <- VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
if("mean" %in% VAR.fin$Stat){
for (i in 1:length(VAR.fin$Year)){
if(VAR.fin$Year[i] %in% c(1,2,3,4,5,6,7,8,9)){
VAR.fin$Year[i] <- paste0("200",VAR.fin$Year[i])
# print("DOODLES")
}else{
VAR.fin$Year[i] <- paste0('20',VAR.fin$Year[i])
}
}
} else {
VAR.fin
}
}
NLCD <- uniForm(NLCD.raw,"area")
NDVI <- uniForm(NDVI.raw,"^NDVI")
NBR <- uniForm(NBR.raw,"^NBR")
uniForm <- function(x,y){
# Rename gridcode to Site
colnames(x)[which(names(x) == "gridcode")] <- "Site"
# First, make a vector that finds all of the column names starting with y*
VAR.query <- colnames(x)[c(grepl(y, colnames(x)))]
# Then extract a dataframe of only variable values and "Gridcode"
VAR.data <- x[c("Site",VAR.query)]
# "Reshape" into longform
VAR.long <- melt(VAR.data, id.vars = "Site")
# # Add columns for year and stat type based of variable name
VAR.long <- VAR.long %>%
mutate(
Year = gsub("[^[:digit:].]","",VAR.long$variable),
Stat = gsub(".*_(.*)\\_.*", "\\1", VAR.long$variable)
)
if("raw.forest.area.2016" %in% VAR.long$variable){
VAR.long$Year <- substrRight(VAR.long$Year,4)
VAR.long <-  mutate(VAR.long,
Stat = gsub("(?:[^.]+\\.){1}([^.]+).*", "\\1", VAR.long$variable)
)} else {
VAR.long
}
VAR.fin <- VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
if("mean" %in% VAR.fin$Stat){
for (i in 1:length(VAR.fin$Year)){
if(VAR.fin$Year[i] %in% c(1,2,3,4,5,6,7,8,9)){
VAR.fin$Year[i] <- paste0("200",VAR.fin$Year[i])
# print("DOODLES")
}else{
VAR.fin$Year[i] <- paste0('20',VAR.fin$Year[i])
}
}
} else {
VAR.long
}
}
NLCD <- uniForm(NLCD.raw,"area")
NDVI <- uniForm(NDVI.raw,"^NDVI")
NBR <- uniForm(NBR.raw,"^NBR")
uniForm <- function(x,y){
# Rename gridcode to Site
colnames(x)[which(names(x) == "gridcode")] <- "Site"
# First, make a vector that finds all of the column names starting with y*
VAR.query <- colnames(x)[c(grepl(y, colnames(x)))]
# Then extract a dataframe of only variable values and "Gridcode"
VAR.data <- x[c("Site",VAR.query)]
# "Reshape" into longform
VAR.long <- melt(VAR.data, id.vars = "Site")
# # Add columns for year and stat type based of variable name
VAR.long <- VAR.long %>%
mutate(
Year = gsub("[^[:digit:].]","",VAR.long$variable),
Stat = gsub(".*_(.*)\\_.*", "\\1", VAR.long$variable)
)
if("raw.forest.area.2016" %in% VAR.long$variable){
VAR.long$Year <- substrRight(VAR.long$Year,4)
VAR.long <-  mutate(VAR.long,
Stat = gsub("(?:[^.]+\\.){1}([^.]+).*", "\\1", VAR.long$variable)
)} else {
VAR.long
}
VAR.fin <- VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
if("mean" %in% VAR.fin$Stat){
for (i in 1:length(VAR.fin$Year)){
if(VAR.fin$Year[i] %in% c(1,2,3,4,5,6,7,8,9)){
VAR.fin$Year[i] <- paste0("200",VAR.fin$Year[i])
# print("DOODLES")
}else{
VAR.fin$Year[i] <- paste0('20',VAR.fin$Year[i])
}
}
} else {
VAR.fin
}
VAR.fin
}
NLCD <- uniForm(NLCD.raw,"area")
NDVI <- uniForm(NDVI.raw,"^NDVI")
NBR <- uniForm(NBR.raw,"^NBR")
NBR <- uniForm(NBR.raw,"^NBR")
NDVI <- uniForm(NDVI.raw,"^NDVI")
View(NDVI)
View(NBR)
setwd("C:/Users/Wes/github/ClimateDataProject/LandCover")
# Load desired packages
library(reshape2)
library(dplyr)
library(magrittr)
NLCD.raw <- read.csv("LULC/NLCD/catchment_results2 - catchment_results.csv")
NDVI.raw <- read.csv("NDVI/draft_ndvi_results3 - draft_ndvi_results3.csv")
NBR.raw <- read.csv("NBR/draft_nbr_results.csv")
### Universal Formatter ###
#Helper:
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
uniForm <- function(x,y){
# Rename gridcode to Site
colnames(x)[which(names(x) == "gridcode")] <- "Site"
# First, make a vector that finds all of the column names starting with y*
VAR.query <- colnames(x)[c(grepl(y, colnames(x)))]
# Then extract a dataframe of only variable values and "Gridcode"
VAR.data <- x[c("Site",VAR.query)]
# "Reshape" into longform
VAR.long <- melt(VAR.data, id.vars = "Site")
# # Add columns for year and stat type based of variable name
VAR.long <- VAR.long %>%
mutate(
Year = gsub("[^[:digit:].]","",VAR.long$variable),
Stat = gsub(".*_(.*)\\_.*", "\\1", VAR.long$variable)
)
if("raw.forest.area.2016" %in% VAR.long$variable){
VAR.long$Year <- substrRight(VAR.long$Year,4)
VAR.long <-  mutate(VAR.long,
Stat = gsub("(?:[^.]+\\.){1}([^.]+).*", "\\1", VAR.long$variable)
)} else {
VAR.long
}
VAR.fin <- VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
if("mean" %in% VAR.fin$Stat){
for (i in 1:length(VAR.fin$Year)){
if(VAR.fin$Year[i] %in% c(1,2,3,4,5,6,7,8,9)){
VAR.fin$Year[i] <- paste0("200",VAR.fin$Year[i])
# print("DOODLES")
}else{
VAR.fin$Year[i] <- paste0('20',VAR.fin$Year[i])
}
}
} else {
VAR.fin
}
VAR.fin
}
NLCD <- uniForm(NLCD.raw,"area")
NDVI <- uniForm(NDVI.raw,"^NDVI")
NBR <- uniForm(NBR.raw,"^NBR")
View(NBR)
View(NDVI)
View(NLCD)
# Make three seperate dataframes:
# Max
maxFun <- function(x){
subset(x,Stat=='max')[,-3]
}
maxFun(NBR)
poo <- maxFun(NBR)
poo <- maxFun(NDVI)
View(poo)
# Make three seperate dataframes:
# Max
maxFun <- function(x){
subset(x,Stat=='max')
}
poo <- maxFun(NDVI)
# Make three seperate dataframes:
# Max
maxFun <- function(x){
subset(x,Stat=='max')[,-3]
}
# Min
minFun <- function(x){
subset(x,Stat=='min')[,-3]
}
# Mean
meanFun <- function(x){
subset(x,Stat=='mean')[,-3]
}
setwd("C:/Users/Wes/github/ClimateDataProject/LandCover")
# Load desired packages
library(reshape2)
library(dplyr)
library(magrittr)
NLCD.raw <- read.csv("LULC/NLCD/catchment_results2 - catchment_results.csv")
NDVI.raw <- read.csv("NDVI/draft_ndvi_results3 - draft_ndvi_results3.csv")
NBR.raw <- read.csv("NBR/draft_nbr_results.csv")
setwd("C:/Users/Wes/github/ClimateDataProject/LandCover")
# Load desired packages
library(reshape2)
library(dplyr)
library(magrittr)
NLCD.raw <- read.csv("LULC/NLCD/catchment_results2 - catchment_results.csv")
NDVI.raw <- read.csv("NDVI/draft_ndvi_results3 - draft_ndvi_results3.csv")
NBR.raw <- read.csv("NBR/draft_nbr_results.csv")
# Note: Below function necessary for 'Year' column formatting in formatter function
# (takes string 'x' and returns 'n' charachters from the right)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
satForm <- function(x,y){
# Rename gridcode to Site
colnames(x)[which(names(x) == "gridcode")] <- "Site"
# First, make a vector that finds all of the column names starting with y*
VAR.query <- colnames(x)[c(grepl(y, colnames(x)))]
# Then extract a dataframe of only variable values and "Gridcode"
VAR.data <- x[c("Site",VAR.query)]
# "Reshape" into longform
VAR.long <- melt(VAR.data, id.vars = "Site")
# # Add columns for year and stat type based of variable name
VAR.long <- VAR.long %>%
mutate(
Year = gsub("[^[:digit:].]","",VAR.long$variable),
Stat = gsub(".*_(.*)\\_.*", "\\1", VAR.long$variable)
)
if("raw.forest.area.2016" %in% VAR.long$variable){
VAR.long$Year <- substrRight(VAR.long$Year,4)
VAR.long <-  mutate(VAR.long,
Stat = gsub("(?:[^.]+\\.){1}([^.]+).*", "\\1", VAR.long$variable)
)} else {
VAR.long
}
VAR.fin <- VAR.long %>%
# then remove variable column and the redundant "0" Years values
subset(Year > 0, select= c("Site","Year","Stat","value"))
if("mean" %in% VAR.fin$Stat){
for (i in 1:length(VAR.fin$Year)){
if(VAR.fin$Year[i] %in% c(1,2,3,4,5,6,7,8,9)){
VAR.fin$Year[i] <- paste0("200",VAR.fin$Year[i])
# print("DOODLES")
}else{
VAR.fin$Year[i] <- paste0('20',VAR.fin$Year[i])
}
}
} else {
VAR.fin
}
VAR.fin
}
NLCD <- satForm(NLCD.raw,"area")
NDVI <- satForm(NDVI.raw,"^NDVI")
NBR <- satForm(NBR.raw,"^NBR")
# Max
maxFun <- function(x){
subset(x,Stat=='max')[,-3]
}
# Min
minFun <- function(x){
subset(x,Stat=='min')[,-3]
}
# Mean
meanFun <- function(x){
subset(x,Stat=='mean')[,-3]
}
?dbinom
p_grid <- seq( from=0, to=1,length.out=1000)
p_grid <- seq( from=0, to=1,length.out=1000)
prob_p <- rep(1,1000)
prob_data <- dbinom(8,size=15,prob=p_grid)
plot(prob_data)
posterior <- prob_data * prob_p
posterior <- posterior/sum(posterior)
plot(posterior)
